@inject HttpClient http

@if (navMenu == null)
{
    <p>loading </p>
}
else
{
    <aside class="sidebar">
        <nav class="sidebar_nav @sideBar">
            <ul class="sidebar_nav_list @sideBarList">
                @foreach (var navItem in navMenu)
                {
                    <li class="sidebar_nav_list_item ">
                        <NavLink href="@navItem.Url" class="sidebar_nav_list_link" ActiveClass="active" Match="NavLinkMatch.All">
                            @navItem.Name
                        </NavLink>
                        <p class="sidebar_nav_list_desc">
                           @navItem.Description
                        </p>
                    </li>
                }
            </ul>

            <div class="sidebar_image_container">
     @* @if (sideBarItems == null)
    {
        <p>loading...</p>
    }
    else
    {
       @foreach (var item in sideBarItems)
       {       
         <div class="sidebar_image_@item.Id sidebar_image">
             <img src="../images/@item.Image" alt="@item.Name" >
         </div>
    }   
                } *@

                <img src="../images/sidebar/side9.jpg" class="sidebar_image" alt="">
                </div> 
        </nav>

        <div class="social">

        </div>

       
    </aside>
}

@code {
    [Parameter]
    public string? sideBar { get; set; }
    [Parameter]
    public string? sideBarList { get; set; }



    private IEnumerable<NavMenu>? navMenu;
        private IEnumerable<SideBar>? sideBarItems;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            navMenu = await http.GetFromJsonAsync<IEnumerable<NavMenu>>("data/nav-menu.json");
            
            sideBarItems = await http.GetFromJsonAsync<IEnumerable<SideBar>>("data/side-bar.json");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading the trail data: {ex.Message}");
        }
    }
}