@inject HttpClient http


@if (memberMenus == null)
{
	 <p>Loading...</p>//add loading animation
}
else
{
<nav class="nav ">

<div class="nav_icon @NavIconCssClass" @onclick="ToggleNav" >
		<div class="line line_1"></div>
		<div class="line line_2"></div>
		<div class="line line_3"></div>
		
	</div>

		<ul class="nav_list @NavListCssClass">
		@foreach (var navItem in memberMenus)
		{
			<li class="nav_list_item">
				<NavLink href="@navItem.Url" class="nav_list_item_link" ActiveClass="active" Match="NavLinkMatch.All">
					@navItem.Name
				</NavLink>
			</li>

		}
	
	</ul>
			
</nav>

<SideBarComponent sideBar="@SideBarCssClass"
				sideBarList="@SideBarListCssClass"
				 />
}

		
	


	

@code {
	private bool sidebar = true;
	private bool sidebarList = true;
	private bool navIcon = true;
	private bool navList = true;

private string? SideBarCssClass => sidebar ? null : "change";
private string? NavIconCssClass => navIcon ? null : "change";
private string? SideBarListCssClass => sidebarList ? null : "change";
private string? NavListCssClass => navList ? null : "change";


private void ToggleNav()
{
	sidebar = !sidebar;
	navIcon = !navIcon;
	sidebarList = !sidebarList;
	navList = !navList;
}

	private IEnumerable<MemberMenu>? memberMenus;



	protected override async Task OnInitializedAsync()
	{
		try
		{
			memberMenus = await http.GetFromJsonAsync<IEnumerable<MemberMenu>>("data/member-menu.json");
		}
		catch (HttpRequestException ex)
		{
			Console.WriteLine($"There was a problem loading the trail data: {ex.Message}");
		}
	}
}
